  
1. pascal:
________
 for(i=0;i<n;i++){
            for(j=0;j<=i;j++)
                if(j==0 || j==i)
                    a[i][j]=1;
                else
                    a[i][j]=a[i-1][j-1]+a[i-1][j];
      }


2. java date problem:
 return (year % 4 == 0 and year % 100 != 0) or year % 400 == 0


31,28,31,30,31,30,31,31,30,31,30,31 

https://www.timeanddate.com/calendar/months/

3. matrix add/mulitplication


	int a[][] = {{1,0,0},{0,1,0},{0,0,1}};
		int b[][] = {{1,7,9},{3,1,9},{2,1,1}};
		int c[][] = new int[3][3];

		for (int i = 0; i < 3; i++) 
		{
			for (int j = 0; j < 3; j++)
			{
				c[i][j] = 0;
				for (int k = 0; k < 3; k++)
				{
					c[i][j] += a[i][k] * b[k][j];
				}
				System.out.print(c[i][j] + " "); 
			}
			System.out.println();
		}
	}


4. seprating -ve and +ve from the array

int a[]= {4,6,-1,-2,6,9};
		int b[]=new int[5];
		int c[]=new int[5];
		int j,k;
		j=0;
		k=0;
		for(int i=0;i<a.length;) {
			if(a[i]>=0) {
				b[j++]=a[i++];
			}
			else
				c[k++]=a[i++];
		}
		
		for(int temp=0;temp<j; temp++)
			System.out.println(b[temp]);
		
		for(int temp=0;temp<k; temp++)
			System.out.println(c[temp]);


5. convert no decimal to binary
6. student result calculation 
		int a[]= {
				78,88,90,25,99,100,56,88,90,49,
				78,88,90,25,99,100,56,88,90,49,
				8,88,90,25,99,100,56,88,90,49,
				22,66,23,89,23,19,33,49,77,89,
				22,66,23,89,23,19,33,49,77,89
				};



7. finding duplicate from arrary
	int a[]= {78,88,90,25,99,100,56,88,90,49,78,88,90,25};
		//find duplicate
		for(int i=0;i<a.length;i++) {
			for(int j=i+1; j<a.length; j++) {
				if(a[i]==a[j])
					System.out.println("duplicate found: "+ a[i]);
			}
		}


8. find largest and smallest in arrary

9.  find firstLargest and secondLargest in arrary

int a[]= {78,88,90,25,99,100};
		int firstLargest=a[0];
		int secondLargest=a[0];
		
		for(int i=0;i<a.length; i++) {
			if(a[i]>firstLargest) {
				secondLargest=firstLargest;
				firstLargest=a[i];
			}else {
				secondLargest=a[i];
			}
		}
		
		System.out.println(firstLargest);
		System.out.println(secondLargest);

9. common elements between two Arrays
int a[]= {71,5,8,117};
		int b[]= {3,6,-9,117,78,88,90,11};
		//find duplicate
		for(int i=0;i<a.length;i++) {
			for(int j=0; j<b.length; j++) {
				if(a[i]==b[j]) {
					System.out.println(a[i]);
					break;
				}
			}
		}



10 .seprating zero and ones
0,1,0,0,1,0,1,1
0 0 0 0 1 1 1 1 



//Segregate 0s and 1s in an Array
		int a[]= {0,1,0,0,1,0,1,1};
		int j=0;
		
		//put zeros only
		for(int i=0;i< a.length; i++) {
			if(a[i]==0)
				a[j++]=a[i];
		}
		
		//we already moved zero, now the remaining values are 1
		while(j<a.length)
			a[j++]=1;
		
		//now print
		for(int i=0;i< a.length ; i++) {
			System.out.print(a[i]+" ");
		}



//removing duplicate element from an array
		
		//1. Approach 1: sort the array then remove duplicate element
		int a[]= {11,1,7,11,19,21};
		int j=0;
		Arrays.sort(a);
		//1, 7, 11, 11, 19, 21 
		
		for(int i=0;i< a.length-1; i++) {
			if(a[i]!=a[i+1]) {
				a[j++]=a[i];
			}
		}
		
		//insert last element
		a[j++]=a[a.length-1];
		
		//printing
		for(int i=0;i<j; i++) {
			System.out.print(a[i]+" ");
			
		}


Insertion in sorted arrray:
___________________________
	int a[]= {3,6,7,9,18,22,0};
		int k=a.length-2;
		int item=20;
		while((item<a[k]&&(k>=0))) {
			a[k+1]=a[k];
			k--;
		}
		a[k+1]=item;
	
		for(int i=0;i<a.length; i++) {
			System.out.println(a[i]);
		}


Bubble sort:
______________

int a[]= {38,52,9,18, 6,62,13};
		int temp;
		for(int i=0;i<a.length; i++)
		{
			for(int j=0;j<a.length-1; j++) 
			{
				if(a[j]> a[j+1]) 
				{
					temp=a[j];
					a[j]=a[j+1];
					a[j+1]=temp;
				}
			}
		}
		for(int val: a) {
			System.out.print(val+" ");
		}


Selection sort
________________
searh smallest and swap with current value

int a[]= {38,52,9,18, 6,62,13};
		int min;
		int temp;
		for(int i=0;i<a.length; i++)
		{
			min=i;
			for(int j=i+1;j<a.length; j++) 
			{
				if(a[j]<a[min]) 
					min=j;
			}
			temp=a[i];
			a[i]=a[min];
			a[min]=temp;
			
		}
		for(int val: a) {
			System.out.print(val+" ");
		}


insertion sort 
________________
put element to its corrrect position(card playing)

int a[]= {5,1,6,2,4,3};// playing card
		int temp;
		int j;
		for(int i=0;i<a.length; i++)
		{
			temp=a[i];
			j=i;
			while(j>0 && a[j-1]> temp)
			{
				a[j]=a[j-1];
				j=j-1;
			}
			a[j]=temp;
		}
		for(int val: a) {
			System.out.print(val+" ");
		}



MergeSort
__________

public class MergeSort 
{
	int array[];
	int tempMergeArr[];
	int lengh;

	public static void main(String[] args) 
	{
		int inputArr[] = { 48, 36, 13, 52, 19, 94, 21 };
		MergeSort mergeSort = new MergeSort();
		mergeSort.sort(inputArr);
		for(int val: inputArr) {
			System.out.print(val+" ");
		}
	}

	void sort(int[] inputArr) 
	{
		this.array = inputArr;
		this.lengh = inputArr.length;
		this.tempMergeArr = new int[lengh];
		divideArray(0, lengh - 1);
	}

	void divideArray(int lowerIndex, int higherIndex)
	{
		if (lowerIndex < higherIndex) 
		{
			int middle = lowerIndex + (higherIndex - lowerIndex) / 2;
			divideArray(lowerIndex, middle);// used for left side arr
			divideArray(middle + 1, higherIndex);// used for right side arr

			mergeArrary(lowerIndex, middle, higherIndex);

		}
	}

	void mergeArrary(int lowerIndex, int middle, int higherIndex) 
	{
			for(int i=lowerIndex; i<=higherIndex; i++)
			{
				tempMergeArr[i]=array[i];
			}
			
			int i=lowerIndex;
			int j=middle+1;
			int k=lowerIndex;
			
			while(i<=middle && j<=higherIndex)
			{
				if(tempMergeArr[i]<=tempMergeArr[j])
				{
					array[k]=tempMergeArr[i];
					i++;
				}
				else
				{
					array[k]=tempMergeArr[j];
					j++;
				}
				k++;
			}
	}
}

